{"version":3,"file":"static/js/570.e0713208.chunk.js","mappings":"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","sources":["constants.js","pages/MovieDetail.jsx"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e4e6e94b6fe2d930a5a2ac796de1a189';\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport axios from 'axios';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BASE_URL, API_KEY } from 'constants';\nimport { ColorRing } from 'react-loader-spinner';\n// import { nanoid } from 'nanoid';\n\nconst MovieDetail = () => {\n  const { movieId } = useParams();\n  const [movieDetail, setMovieDetail] = useState(null);\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    const fetchMovieDetail = async () => {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n      );\n      console.log(response.data);\n\n      setMovieDetail(response.data);\n    };\n\n    fetchMovieDetail();\n  }, [movieId]);\n\n  const backRef = useRef(location.state?.from ?? '/movies');\n\n  return (\n    <div>\n      {movieDetail === null && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"color-ring-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"color-ring-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      )}\n      {movieDetail && (\n        <div>\n          <Link to={backRef.current}>Go back</Link>\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w185${movieDetail.poster_path}`}\n              alt={movieDetail.title}\n            />\n            <h1>\n              {movieDetail.title}\n              <span>({new Date(movieDetail.release_date).getFullYear()})</span>\n            </h1>\n            <p>{movieDetail.overview}</p>\n\n            <p>\n              {movieDetail.genres.length === 0 ? (\n                <span>Without genres</span>\n              ) : (\n                movieDetail.genres.map(genre => {\n                  return <span>{genre.name} </span>;\n                })\n              )}\n            </p>\n          </div>\n          <section>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n              <Suspense\n                fallback={\n                  <ColorRing\n                    visible={true}\n                    height=\"80\"\n                    width=\"80\"\n                    ariaLabel=\"color-ring-loading\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"color-ring-wrapper\"\n                    colors={[\n                      '#e15b64',\n                      '#f47e60',\n                      '#f8b26a',\n                      '#abbd81',\n                      '#849b87',\n                    ]}\n                  />\n                }\n              >\n                <Outlet />\n              </Suspense>\n            </ul>\n          </section>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetail;\n"],"names":["BASE_URL","API_KEY","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetail","setMovieDetail","location","useLocation","console","log","useEffect","fetchMovieDetail","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","stop","apply","arguments","backRef","useRef","state","from","_jsxs","children","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Link","to","current","src","poster_path","alt","title","Date","release_date","getFullYear","overview","genres","length","map","genre","name","Suspense","fallback","Outlet"],"sourceRoot":""}