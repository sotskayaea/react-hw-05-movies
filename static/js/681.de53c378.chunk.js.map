{"version":3,"file":"static/js/681.de53c378.chunk.js","mappings":"iOA4CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAepC,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDC,EAAAA,EAAAA,IAAU,GAADC,OAC3BC,EAAAA,EAAQ,WAAAD,OAAUnB,EAAO,qBAAAmB,OAAoBE,EAAAA,IAChD,KAAD,EAFKP,EAAQC,EAAAO,KAGdC,QAAQC,IAAIV,EAASW,KAAKC,SAE1BnB,EAAgBO,EAASW,KAAKC,SAAS,wBAAAX,EAAAY,OAAA,GAAAd,EAAA,KACxC,kBAPsB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KASvBpB,GACF,GAAG,CAACT,KAGF8B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG1B,IAC0B,IAAxBA,EAAa2B,QACZH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qCAEHF,EAAAA,EAAAA,KAAA,MAAAE,SACG1B,EAAa4B,KAAI,SAAAC,GAChB,OACEC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,UAAQG,EAAOE,WACnBD,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,IAAEG,EAAOG,QAAQ,UAFbC,EAAAA,EAAAA,MAKb,QAKZ,C,6EC1CO,IAAMnB,EAAW,+BACXC,EAAU,kC,uDCDhB,IAAMmB,EACX,mECmBSD,EAAS,WAGlB,IAHiC,IAAdE,EAAIZ,UAAAI,OAAA,QAAAS,IAAAb,UAAA,GAAAA,UAAA,GAAG,GACtBc,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWN,IAC3CA,KACLE,GAAMH,EAA0B,GAAdI,EAAMH,IAE1B,OAAOE,CACT,C","sources":["components/Reviews.jsx","constants.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\nimport { nanoid } from 'nanoid';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      console.log(response.data.results);\n\n      setMovieReviews(response.data.results);\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews &&\n        (movieReviews.length === 0 ? (\n          <p>This movie dont have any review</p>\n        ) : (\n          <ul>\n            {movieReviews.map(review => {\n              return (\n                <li key={nanoid()}>\n                  <h3>Author:{review.author}</h3>\n                  <p>\"{review.content}\"</p>\n                </li>\n              );\n            })}\n          </ul>\n        ))}\n    </>\n  );\n};\n\nexport default Reviews;\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e4e6e94b6fe2d930a5a2ac796de1a189';\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","BASE_URL","API_KEY","sent","console","log","data","results","stop","apply","arguments","_jsx","_Fragment","children","length","map","review","_jsxs","author","content","nanoid","urlAlphabet","size","undefined","id","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}