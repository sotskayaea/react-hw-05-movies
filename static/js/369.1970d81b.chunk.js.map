{"version":3,"file":"static/js/369.1970d81b.chunk.js","mappings":"iUAmDA,EA5Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAe9B,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEC,EAAAA,EAAAA,IAAU,GAADC,OAC3BC,EAAAA,EAAQ,WAAAD,OAAUnB,EAAO,qBAAAmB,OAAoBE,EAAAA,IAChD,KAAD,EAFKP,EAAQC,EAAAO,KAGdC,QAAQC,IAAIV,EAASW,KAAKC,MAE1BnB,EAAaO,EAASW,KAAKC,MAAM,wBAAAX,EAAAY,OAAA,GAAAd,EAAA,KAClC,kBAPmB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KASpBpB,GACF,GAAG,CAACT,KAGF8B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG1B,IACCwB,EAAAA,EAAAA,KAAA,MAAAE,SACG1B,EAAU2B,KAAI,SAAAC,GACb,OACEC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAC0B,OAAvBE,EAAME,cACLN,EAAAA,EAAAA,KAAA,OAAKO,IAAKC,EAAOC,IAAI,UAAUC,MAAO,IAAKC,OAAQ,OAEnDX,EAAAA,EAAAA,KAAA,OACEO,IAAG,mCAAAlB,OAAqCe,EAAME,cAC9CG,IAAKL,EAAMQ,QAIfZ,EAAAA,EAAAA,KAAA,MAAAE,SAAKE,EAAMQ,QACXZ,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAMS,eAXHC,EAAAA,EAAAA,MAcb,OAKV,C,6ECjDO,IAAMxB,EAAW,+BACXC,EAAU,kC,uDCDhB,IAAMwB,EACX,mECmBSD,EAAS,WAGlB,IAHiC,IAAdE,EAAIjB,UAAAkB,OAAA,QAAAC,IAAAnB,UAAA,GAAAA,UAAA,GAAG,GACtBoB,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWP,IAC3CA,KACLG,GAAMJ,EAA0B,GAAdK,EAAMJ,IAE1B,OAAOG,CACT,C","sources":["components/Cast.jsx","constants.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from 'constants';\nimport { nanoid } from 'nanoid';\nimport image from '../assets/nophotocast.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      console.log(response.data.cast);\n\n      setMovieCast(response.data.cast);\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieCast && (\n        <ul>\n          {movieCast.map(actor => {\n            return (\n              <li key={nanoid()}>\n                {actor.profile_path === null ? (\n                  <img src={image} alt=\"nophoto\" width={185} height={278} />\n                ) : (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w185/${actor.profile_path}`}\n                    alt={actor.name}\n                  />\n                )}\n\n                <h3>{actor.name}</h3>\n                <p>{actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'e4e6e94b6fe2d930a5a2ac796de1a189';\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","BASE_URL","API_KEY","sent","console","log","data","cast","stop","apply","arguments","_jsx","_Fragment","children","map","actor","_jsxs","profile_path","src","image","alt","width","height","name","character","nanoid","urlAlphabet","size","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}